[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CASA0023 Learning Diary",
    "section": "",
    "text": "Content\n\nIntroduction\nWeek1\nWeek2\nWeek3\nWeek4\nWeek5\nWeek6\nWeek7\nWeek8\nWeek9"
  },
  {
    "objectID": "Week2.html",
    "href": "Week2.html",
    "title": "Week 2 Portfolio",
    "section": "",
    "text": "In this week, we learnt making slides by Xaringan in Rstudio and writing learning diary by Quarto as well. I made a Xaringan slides for summarizing Landsat 8 OLI sensor, and collected several applications based on OLI imagery. Following url is my Xaringan slides link. I think that after this exercise I will be able to master the basic usage of Xaringan to create slideshows and be able to use Xaringan proficiently.\nMy week2 Xaringan presentation link is:\nhttps://luzhao2000.github.io/RS_week2_pre/"
  },
  {
    "objectID": "intro.html#background",
    "href": "intro.html#background",
    "title": "1  Introduction",
    "section": "1.1 Background",
    "text": "1.1 Background\nHello everyone, my name is Lu, and I am a CASA Masters student enrolled in September 2022 and will graduate in September 2023. My course is Urban Spatial Science, which is an interdisciplinary specialisation in GIS, remote sensing, quantitative analysis, data science, agent-based modelling, and theories related to smart cities.\nI chose this course because I am very interested in satellites and remote sensing images. I can see through these images the long stretches of mountains and the endless sea, which are the places that I might not otherwise go. I think the technology of remote sensing provides me with another way to understand and explore our planet."
  },
  {
    "objectID": "intro.html#education-experience",
    "href": "intro.html#education-experience",
    "title": "1  Introduction",
    "section": "1.2 Education experience",
    "text": "1.2 Education experience\nI attended Capital Normal University and the University of Waterloo for my undergraduate studies from 2018 to 2022. At Capital Normal University, I studied Remote Sensing Science and Technology, and in my courses, I was mainly involved in GIS, remote sensing, advanced mathematics, algebra, probability and statistics, and programming.\nI am very fortunate to be able to participate in the 2+2 externship program between Capital Normal University and the University of Waterloo in Canada. During my two years of study at the University of Waterloo, I majored in Geomatics with a focus on the application of GIS and remote sensing technology and the completion of projects, and I also minored in Mathematics.\nI am currently studying Urban Spatial Science at UCL."
  },
  {
    "objectID": "intro.html#professional-experience",
    "href": "intro.html#professional-experience",
    "title": "1  Introduction",
    "section": "1.3 Professional experience",
    "text": "1.3 Professional experience\nI have a relatively extensive professional experience.\nFirstly, during my undergraduate studies I was involved in 3S Field Investigation at Beijing Wild Duck Lake Wetland Nature Reserve, where I used spectral feature curve data and high-resolution remote sensing imagery from field surveys to perform supervised and unsupervised classification based on ENVI and object-oriented classification based on eCognit. The analysis of land use change was carried out using supervised classification based on ENVI, unsupervised classification and object-oriented classification based on eCognition.\nIn addition, I have worked on ArcGIS Pro and ENVI to analyzing the urban area ahanges from 1975 to 2010 in Toronto and Montreal, analyzing the factors that influence the unemployment rate in London from 2012 to 2021 based on Python, and geospatial weighted regression analysis and multi-factor regression analysis to analyse the factors influencing the spread of COVID-19 in Hubei Province, China by using ArcGIS."
  },
  {
    "objectID": "intro.html#interests",
    "href": "intro.html#interests",
    "title": "1  Introduction",
    "section": "1.4 Interests",
    "text": "1.4 Interests\nI have a relatively strong interest in smart cities and urban analytics. In my previous internship work I have learned about some examples of projects where smart cities were actually used, which made me very interested in digital, more scientifically planned and managed urban systems. At the same time, through the combination of large amounts of data computing and aspects such as GIS, cities can be managed more intelligently and efficiently.\nIn my spare time, I really enjoy reading books and travelling. I think reading allows me to understand and learn new knowledge and cultures more quickly, and to stay creative and imaginative. Travelling allows me to measure the world and open my eyes through my own feet, and is also a way to release stress. I also enjoy yoga and cycling, as proper exercise not only keeps me fit and healthy so that I can focus more when studying, but also relieves tension and heavy coursework."
  },
  {
    "objectID": "intro.html#hope-to-learn",
    "href": "intro.html#hope-to-learn",
    "title": "1  Introduction",
    "section": "1.5 Hope to learn",
    "text": "1.5 Hope to learn"
  },
  {
    "objectID": "Week5.html",
    "href": "Week5.html",
    "title": "Week 5 Google Earth Engine I",
    "section": "",
    "text": "Summary\nApplication\nReflection"
  },
  {
    "objectID": "intro.html#expectations",
    "href": "intro.html#expectations",
    "title": "1  Introduction",
    "section": "1.5 Expectations",
    "text": "1.5 Expectations\nBased on my ideas and my basic situation, I hope that through this course I will become more familiar with the knowledge related to remote sensing and be able to consolidate the theoretical knowledge with practical applications. In addition, I also would like to learn more about cutting-edge technologies and developments in this field as a way to expand my knowledge."
  },
  {
    "objectID": "Week4.html#summary",
    "href": "Week4.html#summary",
    "title": "Week 4 Policy",
    "section": "Summary",
    "text": "Summary"
  },
  {
    "objectID": "Week4.html#application",
    "href": "Week4.html#application",
    "title": "Week 4 Policy",
    "section": "Application",
    "text": "Application"
  },
  {
    "objectID": "Week4.html#reflection",
    "href": "Week4.html#reflection",
    "title": "Week 4 Policy",
    "section": "Reflection",
    "text": "Reflection"
  },
  {
    "objectID": "Week3.html#summary",
    "href": "Week3.html#summary",
    "title": "Week 3 Corrections",
    "section": "Summary",
    "text": "Summary"
  },
  {
    "objectID": "Week3.html#application",
    "href": "Week3.html#application",
    "title": "Week 3 Corrections",
    "section": "Application",
    "text": "Application"
  },
  {
    "objectID": "Week3.html#reflection",
    "href": "Week3.html#reflection",
    "title": "Week 3 Corrections",
    "section": "Reflection",
    "text": "Reflection"
  },
  {
    "objectID": "Week1.html#summary",
    "href": "Week1.html#summary",
    "title": "Week 1 Getting started with remote sensing",
    "section": "Summary",
    "text": "Summary\n\nSummary of lecture\nIn fact, in our real life, applications for remote sensing are relatively common and there are a large number of satellites currently in use (Garcia 2015).\nRemote sensing can be generally divided into two types based on different types of sensors, one is passive sensor, the other is active sensor. Passive sensor usually does not emit anything, it just reflects energy (electromagnetic waves) from the sun, for instance, satellite sensor. Active sensor emits electromagnetic waves actively and receive the energy back, such as Radar and LIDAR.\nElectromagnetic radiation from the sun is different with the energy arrive the earth surface, since the energy can be scatter by the atmosphere. Atmosphere scatter can be divided into three types, including Rayleigh, Mie and non selective, which is depends on the sizes of particles and the wavelengths. These scattering phenomena are also very common in everyday life, such as the sky is blue, since Raleigh scattering happens. Similarly, we can explain the black sky in the space and blue ocean.\nHowever, passive remote sensing has a very large disadvantage that the quality of imagery depends on the weather and cloud cover. We can solve this problem by using active sensors, for instance, Synthetic Aperture Radar (SAR), which can see through clouds, volcanic ash, and other bad atmospheric conditions based on longer wavelengths.\nRemote sensing imagery is raster data, but there are a variety of data storage formats, including band interleaved by line, band sequential, band interleaved by pixel, and GeoTIFF.\nThere are four resolutions to describe the quality or characteristics of the imagery, including spatial resolution, spectral resolution, temporal resolution, and radiometric resolution.\nNotice:\n\nThe direction of sunlight might influences the image, and may even affect the interpretation of the images.\n\n\n\nSummary of practical"
  },
  {
    "objectID": "Week1.html#application",
    "href": "Week1.html#application",
    "title": "Week 1 Getting started with remote sensing",
    "section": "Application",
    "text": "Application\nPassive remote sensing application\nActive remote sensing application"
  },
  {
    "objectID": "Week1.html#reflection",
    "href": "Week1.html#reflection",
    "title": "Week 1 Getting started with remote sensing",
    "section": "Reflection",
    "text": "Reflection\n\n\n\n\nGarcia, Mark. 2015. “Space Debris and Human Spacecraft.” http://www.nasa.gov/mission_pages/station/news/orbital_debris.html."
  },
  {
    "objectID": "Week5.html#summary",
    "href": "Week5.html#summary",
    "title": "Week 5 Google Earth Engine I",
    "section": "Summary",
    "text": "Summary\nIn this week, we focus more on what is Google Earth Engine, and how to use it to solve the real world problems. Meanwhile, we will also summary important points and outputs in this week practical for reviewing.\n\nGoogle Earth Engine (GEE) introduction\nGEE is an online mapping platform which is based on Javascript. With R and QGIS we learnt in CASA0005, and Python we learnt in CASA0013 in the last term, it may be a little easier to understand Javascript after learning and applying them in practice.\nGEE has client side and server side, and there are some differences between them that should be noted in practice. For instance, we cannot use loop in the server side, but we can use mapping function in the server side. That is because that the data, including shapefile, table, and other types of data, that we upload will be stored in client, so that server does not know what objects are used for looping.\nScale in GEE refers to pixel resolution, and it might return different values for the scales based on different specific analysis. What we need to pay more attention is that we need to set scale in the script window in GEE, or else the scale will change every time after we adjust the scale in the map window in GEE.\nFor projection, GEE sets the default projection coordinate system and converts all data to this coordinate system. In practice, there is an option to import the processed data from GEE into software such as QGIS and convert the coordinate system to the one we need.\n\n\nGEE in action\nThere are nine types of object classes in GEE, including Image, ImageCollection, Geometry, Feature, FeatureCollection, Reducer, Join, Array, and Chart. Image, imageCollection, Geometry , Feature, and FeatureCollection are consists of the data sets.\nReducer is more like a “groupby” in terms of functionality, which can aggregate data over time, space and other aspects, and calculate the new values of pixels based on summary statistics, linear regression, and other methods. Usually, we can choose to use median when doing reduce image is good enough, especially doing forest & non-forest, water & non-water (giant difference between two categories). Reducing images by neighbourhoods can help us to see the features which may not be clear on the raw images.\nIn addition, we can do join and spatial join in GEE as well, which is quite similar as R.\nNotice:\n\nGeometries do not have properties, while features have.\nWe need to distinguish the small differences between reducing images by regions and reducing images by region.\nWhen doing multivariate multiple linear regression, which means that we do linear regression with two dependent variables at the same time, but separately, and make sure to have a constant band.\n\n\n\nSummary of practical in this week\nThis week’s practical is mainly used to familiarize with the basic functions of GEE and to combine these with what we have learnt in class about remote sensing image processing in a practical way. Main workflow of practical in this week shows in the following Figure 1. Our main project is to process remote sensing images and get one image in the target study area. In this practical, we set the study area as Dheli, India.\n\n\n\nFig.1 Workflow of Practical in Week 5\n\n\nAfter we create GEE account and open GEE, we added a point of New Delhi based on the coordinates, and also we loaded Landsat images and added them to map. Then, we chose to load a shapefile document of New Delhi, load Landsat images intersect with the study area, and apply “applyScaleFactors” created by Matt Hanson to choose the better image. “applyScaleFactors” function shows in the following code chunk. Therefore, we got three images which have intersections with the study area in true color.\n\n#function applyScaleFactors(image) {\n#  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);\n#  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);\n#  return image.addBands(opticalBands, null, true)\n#              .addBands(thermalBands, null, true);\n#}\n\nNote: The pair of values 0.0000275 & -0.2 is scale factor of surface reflectance with Landsat Level-2 collection 2, and the pair of values 0.00341802 & 149.0 are the scale factors of surface temperature (“How Do i Use a Scale Factor with Landsat Level-2 Science Products? | u.s. Geological Survey,” n.d.).\n\n\n\nFig.2 True color images intersect New Delhi after applying “applyScaleFactors” function\n\n\nIn the next step, we mosaic three images into one image and calculate mean pixel values as the pixel values of overlapped areas.\n\n\n\nFig.3 Image after merging through mosaic\n\n\nAfter clipped the image by study area shapefile and select specific bands, we got one complete satellite image inside the boundary of study area.\n\n\n\nFig.4 Clipped image of New Delhi after processing\n\n\nIn this case, we can measure texture, do PCA and add bands with high variances as a layer to the map.\n\n#var glcm = clip.select(['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7'])\n#  .multiply(1000)\n#  .toUint16()\n#  .glcmTexture({size: 1})\n#  .select('SR_.._contrast|SR_.._diss')\n#  .addBands(clip);\n#// add to the map, but change the range values  \n#Map.addLayer(glcm, {min:14, max: 650}, 'glcm');\n\nNote:\n\nMultiply by 1000 is multiplying surface reflectance to compute texture.\nThe parameter size in glcmTexture() is set to 1 to set the extent of the neighbourhood to be a 3 by 3 grid.\n\nIn real world applications, the results of this step can be used to perform some analysis of New Delhi in GEE or to export this layer for analysis in the softwares, for example to calculate NDVI.\n\n\n\nFig.5 NDVI of New Delhi based on Landsat 8 images\n\n\n\n\nQuestions\nNo question so far."
  },
  {
    "objectID": "Week5.html#application",
    "href": "Week5.html#application",
    "title": "Week 5 Google Earth Engine I",
    "section": "Application",
    "text": "Application\nGEE is a cloud-based storage platform for geospatial analysis built on Google’s powerful cloud computing capabilities, which allows users to use this platform to support many studies and analyses, such as in forest degradation and geological hazards(Gorelick et al. 2017).\nZhang et al. (2021) implemented monitoring of PV plants in the Ningxia Autonomous Region through GEE-based random forest mapping of PV plants. They chose to conduct their analysis on GEE, an online platform, because of its ability and efficiency to directly extract free and open source remote sensing imagery data like Landsat 8 and run large volumes of data without data storage issues (Zhang et al. 2021). However, I think that the authors have used GEE for random forests to make clever use of the advantages of the platform. Also, as an online map platform, it may be easier to complete group projects that require collaboration, but may not be suitable when the data required is not free and open source or not included in the GEE database.\nQu et al. (2021) explored ways to improve the accuracy of land use and land cover classification using remotely sensed datasets provided by GEE as well as ancillary datasets. They examined the impacts of different feature data on the accuracy of the random forest classification model with the help of six types of feature data obtained from GEE, including spectral features, topographic features, soil features, and other three aspects (Qu et al. 2021). I think this approach can reduce a lot of the time spent on finding feature data sets, and I may consider borrowing this approach to build a high-precision object-oriented classification model for random forests via GEE if a large and diverse set of feature data sets needs to be collected in future research.\nWith the GEE development aspect, users can also develop simple applications such as comparing air quality on their own (Gaertner, n.d.a). Besides that, “MODIS NDVI Slider” (n.d.) is a very representative GEE-based application developed to compare differences in NDVI between years. The development APIs included in GEE allow for more customization options and these examples highlight the versatility of GEE for data visualization.\n\n\n\nFig.6 Screenshot of Europe’s Air Quality Winner app developed by Gaertner (n.d.) based on GEE\n\n\nIn addition to the above applications, which are more oriented towards visualising the results in a different way, there are also interactive applications based on GEE, such as the GEE-based application ‘Population Rings’ developed by (Gaertner, n.d.b), which allows users to click on any location on a map to divide four areas around that point and show the line chart of the population changein each zone between 1975 and 2015.\nHowever, analysis and development based on GEE is limited by the tools provided by this platform and cannot achieve all the needs of the users (Amani et al. 2020)."
  },
  {
    "objectID": "Week5.html#reflection",
    "href": "Week5.html#reflection",
    "title": "Week 5 Google Earth Engine I",
    "section": "Reflection",
    "text": "Reflection\nThis week was spent learning about GEE, an online geospatial analysis platform. What I found interesting was that the platform not only allows for some basic vector and raster data processing and analysis, a huge open source database, but also the ability for users to develop simple applications of their own. I think GEE is a platform that can be used in future research when a large amount of open source remote sensing data is needed or when feature datasets are needed for analysis, so that there is no need to download large amounts of data, which affects efficiency, takes up a lot of memory space, and is not convenient for transferring back and forth between team members.\nHowever, if the data used in the study requires remote sensing images with a high degree of accuracy and confidentiality, it may be more appropriate to use software or programming to process them locally. In addition, the programming language used in the GEE code editor is Java, which may not be suitable for users with little or no programming skills, and it may be possible to provide code editors for other programming languages or to design a collection of tools like the toolkit for ArcGIS online. This might allow more users to experience GEE and give advice from different perspectives to help make it better.\n\n\n\n\nAmani, Meisam, Arsalan Ghorbanian, Seyed Ali Ahmadi, Mohammad Kakooei, Armin Moghimi, S. Mohammad Mirmazloumi, Sayyed Hamed Alizadeh Moghaddam, et al. 2020. “Google Earth Engine Cloud Computing Platform for Remote Sensing Big Data Applications: A Comprehensive Review.” IEEE Journal of Selected Topics in Applied Earth Observations and Remote Sensing 13: 5326–50. https://doi.org/10.1109/JSTARS.2020.3021052.\n\n\nGaertner, Philipp. n.d.a. “Europe Air Quality Winner.” https://gaertnerp.users.earthengine.app/view/europe-air-quality-winner#cloud=10;scale=15000;ranking=absolute%20difference%20(%CE%BCmol%2Fm%C2%B2);startdate=2020-03-01;enddate=2020-04-01;\n\n\n———. n.d.b. “Population-Rings.” https://gaertnerp.users.earthengine.app/view/population-rings.\n\n\nGorelick, Noel, Matt Hancher, Mike Dixon, Simon Ilyushchenko, David Thau, and Rebecca Moore. 2017. “Google Earth Engine: Planetary-Scale Geospatial Analysis for Everyone.” Remote Sensing of Environment 202 (December): 18–27. https://doi.org/10.1016/j.rse.2017.06.031.\n\n\n“How Do i Use a Scale Factor with Landsat Level-2 Science Products? | u.s. Geological Survey.” n.d. https://www.usgs.gov/faqs/how-do-i-use-scale-factor-landsat-level-2-science-products.\n\n\n“MODIS NDVI Slider.” n.d. https://khaledalshamaa.users.earthengine.app/view/modis-ndvi-slider.\n\n\nQu, Le’an, Zhenjie Chen, Manchun Li, Junjun Zhi, and Huiming Wang. 2021. “Accuracy Improvements to Pixel-Based and Object-Based LULC Classification with Auxiliary Datasets from Google Earth Engine.” Remote Sensing 13 (3): 453. https://doi.org/10.3390/rs13030453.\n\n\nZhang, Xunhe, Mojtaba Zeraatpisheh, Md Mizanur Rahman, Shujian Wang, and Ming Xu. 2021. “Texture Is Important in Improving the Accuracy of Mapping Photovoltaic Power Plants: A Case Study of Ningxia Autonomous Region, China.” Remote Sensing 13 (19): 3909. https://doi.org/10.3390/rs13193909."
  },
  {
    "objectID": "Week5.html#application-fig.1-workflow-of-practical-in-week-5",
    "href": "Week5.html#application-fig.1-workflow-of-practical-in-week-5",
    "title": "Week 5 Google Earth Engine I",
    "section": "Application {#Fig.1 Workflow of Practical in Week 5}",
    "text": "Application {#Fig.1 Workflow of Practical in Week 5}"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Amani, Meisam, Arsalan Ghorbanian, Seyed Ali Ahmadi, Mohammad Kakooei,\nArmin Moghimi, S. Mohammad Mirmazloumi, Sayyed Hamed Alizadeh Moghaddam,\net al. 2020. “Google Earth Engine Cloud Computing Platform for\nRemote Sensing Big Data Applications: A Comprehensive Review.”\nIEEE Journal of Selected Topics in Applied Earth Observations and\nRemote Sensing 13: 5326–50. https://doi.org/10.1109/JSTARS.2020.3021052.\n\n\nGaertner, Philipp. n.d.a. “Europe Air Quality Winner.” https://gaertnerp.users.earthengine.app/view/europe-air-quality-winner#cloud=10;scale=15000;ranking=absolute%20difference%20(%CE%BCmol%2Fm%C2%B2);startdate=2020-03-01;enddate=2020-04-01;\n\n\n———. n.d.b. “Population-Rings.” https://gaertnerp.users.earthengine.app/view/population-rings.\n\n\nGorelick, Noel, Matt Hancher, Mike Dixon, Simon Ilyushchenko, David\nThau, and Rebecca Moore. 2017. “Google Earth Engine:\nPlanetary-Scale Geospatial Analysis for Everyone.” Remote\nSensing of Environment 202 (December): 18–27. https://doi.org/10.1016/j.rse.2017.06.031.\n\n\n“How Do i Use a Scale Factor with Landsat Level-2 Science\nProducts? | u.s. Geological Survey.” n.d. https://www.usgs.gov/faqs/how-do-i-use-scale-factor-landsat-level-2-science-products.\n\n\n“MODIS NDVI Slider.” n.d. https://khaledalshamaa.users.earthengine.app/view/modis-ndvi-slider.\n\n\nQu, Le’an, Zhenjie Chen, Manchun Li, Junjun Zhi, and Huiming Wang. 2021.\n“Accuracy Improvements to Pixel-Based and Object-Based LULC\nClassification with Auxiliary Datasets from Google Earth Engine.”\nRemote Sensing 13 (3): 453. https://doi.org/10.3390/rs13030453.\n\n\nZhang, Xunhe, Mojtaba Zeraatpisheh, Md Mizanur Rahman, Shujian Wang, and\nMing Xu. 2021. “Texture Is Important in Improving the Accuracy of\nMapping Photovoltaic Power Plants: A Case Study of Ningxia Autonomous\nRegion, China.” Remote Sensing 13 (19): 3909. https://doi.org/10.3390/rs13193909."
  }
]